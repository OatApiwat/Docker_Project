import paho.mqtt.publish as publish
import json
import time
import random

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ MQTT Broker ‡πÅ‡∏•‡∏∞ Topic
MQTT_BROKER = "localhost"  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô Broker ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
MQTT_TOPIC = "sensor/data"
i=0
def publish_sensor_data():
    global i
    """ ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Sensor ‡πÑ‡∏õ‡∏¢‡∏±‡∏á MQTT Broker ‡∏ó‡∏∏‡∏Å 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ """
    while True:
        i=i+1
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÄ‡∏ã‡πá‡∏ô‡πÄ‡∏ã‡∏≠‡∏£‡πå‡πÅ‡∏ö‡∏ö‡∏™‡∏∏‡πà‡∏°
        data = {
            "sensor_id": "002",
            "location": "chiangmai",
            "temperature": i,
            "humidity": round(random.uniform(60, 80), 2),
            "pressure": round(random.uniform(1005, 1015), 2)
        }

        # ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÑ‡∏õ‡∏¢‡∏±‡∏á MQTT Broker
        publish.single(MQTT_TOPIC, json.dumps(data), hostname=MQTT_BROKER, port=1883)
        print(f"üì§ Data sent: {data}")

        # ‡∏£‡∏≠ 2 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ‡∏Å‡πà‡∏≠‡∏ô‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÉ‡∏´‡∏°‡πà
        time.sleep(2)

# ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏õ‡πá‡∏ô Script ‡∏´‡∏•‡∏±‡∏Å
if __name__ == "__main__":
    publish_sensor_data()
